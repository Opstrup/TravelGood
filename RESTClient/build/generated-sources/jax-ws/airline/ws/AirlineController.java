
package airline.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import dk.dtu.imm.fastmoney.types.CreditCardInfoType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AirlineController", targetNamespace = "http://ws.airline/")
@XmlSeeAlso({
    dk.dtu.imm.fastmoney.types.ObjectFactory.class,
    airline.ws.ObjectFactory.class,
    dk.dtu.imm.fastmoney.ObjectFactory.class
})
public interface AirlineController {


    /**
     * 
     * @param endAirport
     * @param startAirport
     * @param startDate
     * @return
     *     returns java.util.List<airline.ws.FlightInformation>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getFlights", targetNamespace = "http://ws.airline/", className = "airline.ws.GetFlights")
    @ResponseWrapper(localName = "getFlightsResponse", targetNamespace = "http://ws.airline/", className = "airline.ws.GetFlightsResponse")
    @Action(input = "http://ws.airline/AirlineController/getFlightsRequest", output = "http://ws.airline/AirlineController/getFlightsResponse")
    public List<FlightInformation> getFlights(
        @WebParam(name = "startAirport", targetNamespace = "")
        String startAirport,
        @WebParam(name = "endAirport", targetNamespace = "")
        String endAirport,
        @WebParam(name = "startDate", targetNamespace = "")
        Object startDate);

    /**
     * 
     * @param creditCardInformation
     * @param bookingNumber
     * @return
     *     returns boolean
     * @throws CreditCardFaultMessage
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bookFlight", targetNamespace = "http://ws.airline/", className = "airline.ws.BookFlight")
    @ResponseWrapper(localName = "bookFlightResponse", targetNamespace = "http://ws.airline/", className = "airline.ws.BookFlightResponse")
    @Action(input = "http://ws.airline/AirlineController/bookFlightRequest", output = "http://ws.airline/AirlineController/bookFlightResponse", fault = {
        @FaultAction(className = CreditCardFaultMessage.class, value = "http://ws.airline/AirlineController/bookFlight/Fault/CreditCardFaultMessage")
    })
    public boolean bookFlight(
        @WebParam(name = "bookingNumber", targetNamespace = "")
        int bookingNumber,
        @WebParam(name = "CreditCardInformation", targetNamespace = "")
        CreditCardInfoType creditCardInformation)
        throws CreditCardFaultMessage
    ;

    /**
     * 
     * @param flightPrice
     * @param creditCardInformation
     * @param bookingNumber
     * @throws CreditCardFaultMessage
     * @throws Exception_Exception
     */
    @WebMethod
    @RequestWrapper(localName = "cancelFlight", targetNamespace = "http://ws.airline/", className = "airline.ws.CancelFlight")
    @ResponseWrapper(localName = "cancelFlightResponse", targetNamespace = "http://ws.airline/", className = "airline.ws.CancelFlightResponse")
    @Action(input = "http://ws.airline/AirlineController/cancelFlightRequest", output = "http://ws.airline/AirlineController/cancelFlightResponse", fault = {
        @FaultAction(className = CreditCardFaultMessage.class, value = "http://ws.airline/AirlineController/cancelFlight/Fault/CreditCardFaultMessage"),
        @FaultAction(className = Exception_Exception.class, value = "http://ws.airline/AirlineController/cancelFlight/Fault/Exception")
    })
    public void cancelFlight(
        @WebParam(name = "bookingNumber", targetNamespace = "")
        int bookingNumber,
        @WebParam(name = "flightPrice", targetNamespace = "")
        int flightPrice,
        @WebParam(name = "CreditCardInformation", targetNamespace = "")
        CreditCardInfoType creditCardInformation)
        throws CreditCardFaultMessage, Exception_Exception
    ;

}
